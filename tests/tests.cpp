/*

       ___     __                    
      / _/  __/ /  __ _____  ___ ____
     / _/ |/ / _ \/ // / _ \/ -_) __/
    /_/ |___/_//_/\_, / .__/\__/_/   
                 /___/_/             

    Finite Volumes for High Performance

    - Description : Tests for solver edits validation
    - Author : Alexis Angers
    - Contact : alexis.angers@polymtl.ca

*/
#include <fvhyper/test.h>
#include <fvhyper/mesh.h>
#include <fvhyper/explicit.h>
#include <fvhyper/parallel.h>
#include <fvhyper/post.h>

#include <sstream>
#include <iomanip>
#include <fstream>


std::string convert_double(const double& x, uint decimals) {
    std::ostringstream streamObj;
    streamObj << std::fixed;
    streamObj << std::setprecision(decimals);
    streamObj << x;
    return streamObj.str();
}


/*
    Implementation of Burgers equation-type advection problem using fvhyper
*/
namespace fvhyper {

    // Define global constants
    const int vars = 2;
    const std::vector<std::string> var_names = {
        "u",
        "v"
    };
    namespace solver {
        const bool do_calc_gradients = true;
        const bool do_calc_limiters = true;
        const bool linear_interpolate = true;
        const bool diffusive_gradients = true;
        const bool global_dt = false;
        const bool smooth_residuals = true;
    }

    /*
        Define initial solution
        Here, we have a non-uniform initial condition
            u = 1, v = 0   in the circle with center (0.5, 0.5) and radius 0.4
            u = 0, v = 0   elsewhere
    */
    void generate_initial_solution(
        std::vector<double>& v,
        const mesh& m
    ) {
        for (uint i=0; i<m.cellsAreas.size(); ++i) {
            v[vars*i] = 0.;
            v[vars*i+1] = 0.;
        }
    }

    // Here the limiter function is the minmod limiter
    double limiter_func(const double& r) {
        return std::max(0., std::min(1., r));
    }

    /*
        Define flux function
        The pde to solve is:
            u_t + div(u*B) = 0
        In finite volume form:
            u_t + div(u*B) = 0
            int(u_t)dV + int(u*B*n)dS = 0
        So the flux function is:
            F(u) = u*B*n
        With n the normal vector.

        This flux function is not stable with central differences
        An upwind stabilisation is required
    */
    void calc_flux(
        double* f,
        const double* qi,
        const double* qj,
        const double* gx,
        const double* gy,
        const double* n
    ) {
        // Flux
        double Vi = qi[0]*n[0] + qi[1]*n[1];
        double Vj = qj[0]*n[0] + qj[1]*n[1];

        double fi[2];
        fi[0] = Vi*qi[0];
        fi[1] = Vi*qi[1];

        double fj[2];
        fj[0] = Vj*qj[0];
        fj[1] = Vj*qj[1];

        // V = beta * n
        double V = std::max(std::abs(Vi), std::abs(Vj));

        // Upwind flux
        f[0] = 0.5*(fi[0] + fj[0]) - 0.5*V*(qj[0] - qi[0]); 
        f[1] = 0.5*(fi[1] + fj[1]) - 0.5*V*(qj[1] - qi[1]);

        // Diffusive flux
        f[0] += -(gx[0]*n[0] + gy[0]*n[1]);
        f[1] += -(gx[1]*n[0] + gy[1]*n[1]);
    }

    /*
        Define the time step. Here, time step is constant over all cells
    */
    void calc_dt(
        std::vector<double>& dt,
        const std::vector<double>& q,
        mesh& m
    ) {
        // Constant time step
        for (uint i=0; i<dt.size(); ++i) {
            dt[i] = 1e-3;
        }
    }


    namespace boundaries {

        /*
            Define boundary conditions
            We apply a neumann zero flux condition to all boundaries
        */
        void zero_flux(double* b, double* q, double* n) {
            b[0] = -n[1];
            b[1] = n[0];
        }
        std::map<std::string, void (*)(double*, double*, double*)> 
        bounds = {
            {"wall", zero_flux}
        };
    }


    /*
        Define extra output variables
    */
    namespace post {
        void calc_output_u(double* u, double* q) {
            // Compute vector u
            u[0] = q[0];
            u[1] = q[1];
        }

        std::map<std::string, void (*)(double*, double*)> 
        extra_scalars = {};
        
        std::map<std::string, void (*)(double*, double*)> 
        extra_vectors = {
            {"U", calc_output_u}
        };
    }


}



fvhyper::status test_mesh(fvhyper::mpi_wrapper& pool) {
    fvhyper::status status;

    std::map<uint, std::vector<uint>> mesh_sol = {
        {3, {1,119,19,0,56,120,50,0,50,120,121,0,19,119,122,0,123,124,125,0,126,127,122,0,1,128,119,0,129,130,131,0,125,132,123,0,122,119,126,0,133,130,129,0,127,134,122,0,135,136,137,0,126,119,138,0,41,47,139,0,140,141,142,0,135,143,144,0,144,143,142,0,142,141,145,0,42,145,146,0,147,145,42,0,145,141,146,0,142,143,140,0,148,145,147,0,149,48,55,0,150,48,149,0,151,149,55,0,152,149,151,0,44,152,151,0,152,153,149,0,138,154,155,0,155,154,156,0,157,158,159,0,157,159,160,0,160,155,156,0,158,161,159,0,161,162,159,0,16,163,15,0,156,164,53,0,157,49,150,0,10,121,9,0,52,157,160,0,53,164,54,0,165,126,162,0,8,125,7,0,6,166,5,0,164,56,54,0,160,156,53,0,156,123,164,0,14,133,13,0,157,150,158,0,126,138,162,0,165,127,126,0,19,122,18,0,161,165,162,0,138,155,162,0,165,135,127,0,52,160,53,0,156,154,123,0,12,167,11,0,162,155,159,0,52,49,157,0,159,155,160,0,158,140,161,0,151,55,4,0,49,48,150,0,151,4,45,0,44,151,45,0,149,153,150,0,150,153,158,0,146,152,44,0,158,153,140,0,146,44,43,0,42,146,43,0,142,145,148,0,144,142,148,0,168,144,148,0,146,141,152,0,153,141,140,0,152,141,153,0,169,168,148,0,147,42,41,0,140,143,161,0,165,143,135,0,169,148,147,0,147,41,139,0,123,170,124,0,161,143,165,0,47,46,171,0,169,147,139,0,131,169,139,0,139,47,171,0,131,139,171,0,137,136,163,0,144,136,135,0,135,137,127,0,131,171,167,0,46,172,171,0,11,172,3,0,167,172,11,0,168,136,144,0,137,134,127,0,168,173,136,0,121,51,50,0,171,172,167,0,136,173,163,0,168,130,173,0,131,130,169,0,164,132,56,0,129,131,167,0,119,174,138,0,173,130,133,0,18,134,17,0,122,134,18,0,56,132,120,0,166,128,5,0,5,128,1,0,13,129,12,0,12,129,167,0,133,129,13,0,7,124,6,0,125,124,7,0,2,51,10,0,10,51,121,0,6,124,166,0,46,40,172,0,128,174,119,0,137,175,134,0,16,175,163,0,121,176,9,0,8,176,125,0,163,177,15,0,14,177,133,0,163,175,137,0,172,40,3,0,120,132,125,0,125,176,120,0,120,176,121,0,169,130,168,0,173,177,163,0,133,177,173,0,166,170,174,0,123,132,164,0,134,175,17,0,138,174,154,0,166,174,128,0,17,175,16,0,174,170,154,0,9,176,8,0,154,170,123,0,15,177,14,0,124,170,166,0,58,51,59,0,50,51,58,0,46,189,190,0,190,40,46,0,200,46,47,0,201,47,41,0,200,47,201,0,221,217,43,0,45,224,221,0,55,76,78,0,4,55,78,0,55,48,76,0,54,99,105,0,107,52,105,0,56,108,54,0,54,108,99,0,53,54,105,0,107,49,52,0,20,59,2,0,52,53,105,0,4,78,80,0,107,79,49,0,57,224,45,0,4,80,57,0,79,48,49,0,76,48,79,0,4,57,45,0,44,45,221,0,44,221,43,0,43,217,219,0,42,43,219,0,219,201,41,0,42,219,41,0,56,50,108,0,108,50,58,0,200,189,46,0,59,51,2,0,39,40,190,0,3,40,39,0,1,5,0,0,5,6,0,0,6,7,0,0,7,8,0,0,8,9,0,0,9,10,0,0,2,10,0,0,3,11,0,0,11,12,0,0,12,13,0,0,13,14,0,0,14,15,0,0,15,16,0,0,16,17,0,0,17,18,0,0,18,19,0,0,1,19,0,0}},
        {0, {80,73,81,0,72,73,80,0,82,83,84,0,51,57,85,0,84,86,82,0,85,87,51,0,83,88,84,0,89,90,88,0,81,91,80,0,90,92,88,0,82,86,93,0,94,87,85,0,95,87,94,0,93,96,82,0,97,98,99,0,77,98,100,0,100,98,97,0,1,77,100,0,98,101,99,0,77,70,98,0,102,2,79,0,59,56,103,0,103,56,104,0,105,106,107,0,107,106,108,0,52,106,60,0,108,109,107,0,110,111,112,0,113,109,114,0,60,106,105,0,115,111,110,0,110,109,108,0,112,109,110,0,107,109,113,0,111,116,112,0,117,55,59,0,118,80,119,0,120,121,122,0,123,124,125,0,126,111,115,0,76,121,127,0,118,119,128,0,119,124,128,0,114,109,112,0,95,94,113,0,129,74,127,0,78,130,76,0,76,130,121,0,131,132,133,0,132,116,133,0,122,128,134,0,135,116,134,0,128,124,123,0,124,89,125,0,21,136,20,0,131,129,120,0,122,134,132,0,94,105,107,0,3,93,25,0,122,121,118,0,114,112,135,0,125,83,137,0,137,83,138,0,85,57,58,0,133,111,126,0,117,108,53,0,134,116,132,0,138,82,95,0,75,76,127,0,112,116,135,0,137,138,114,0,138,95,113,0,85,58,105,0,127,121,120,0,123,125,137,0,24,84,23,0,133,116,111,0,117,53,55,0,115,117,59,0,129,71,74,0,115,59,103,0,115,110,117,0,131,120,132,0,129,127,120,0,94,85,105,0,123,135,134,0,19,81,0,0,97,99,126,0,138,83,82,0,120,122,132,0,74,75,127,0,118,130,80,0,110,108,117,0,121,130,118,0,58,60,105,0,126,115,103,0,128,123,134,0,137,114,135,0,123,137,135,0,99,133,126,0,122,118,128,0,94,107,113,0,99,131,133,0,138,113,114,0,53,106,52,0,97,126,103,0,108,106,53,0,97,103,104,0,54,2,102,0,104,56,54,0,104,54,102,0,100,97,104,0,100,104,102,0,1,100,102,0,99,101,131,0,129,101,71,0,1,102,79,0,131,101,129,0,101,70,71,0,98,70,101,0,125,88,83,0,78,72,130,0,89,88,125,0,130,72,80,0,139,91,140,0,136,139,140,0,89,139,136,0,87,50,51,0,124,139,89,0,82,96,95,0,20,140,19,0,81,73,0,0,93,86,25,0,3,50,93,0,136,140,20,0,24,86,84,0,19,140,81,0,25,86,24,0,136,90,89,0,21,90,136,0,84,92,23,0,80,91,119,0,88,92,84,0,119,139,124,0,22,90,21,0,87,96,50,0,23,92,22,0,95,96,87,0,50,96,93,0,119,91,139,0,140,91,81,0,22,92,90,0,78,142,72,0,72,142,143,0,51,214,57,0,171,70,77,0,172,70,171,0,173,171,77,0,79,304,303,0,2,306,304,0,2,304,79,0,55,225,59,0,59,225,56,0,228,225,55,0,54,68,2,0,234,52,233,0,233,52,60,0,178,186,75,0,179,71,172,0,74,179,182,0,53,245,55,0,75,186,76,0,186,78,76,0,27,51,26,0,182,178,75,0,58,215,60,0,215,233,60,0,74,182,75,0,245,52,234,0,74,71,179,0,245,228,55,0,56,225,227,0,227,68,54,0,53,52,245,0,56,227,54,0,68,306,2,0,79,303,47,0,1,79,47,0,173,77,1,0,71,70,172,0,173,1,47,0,143,73,72,0,186,154,78,0,78,154,142,0,51,50,26,0,0,73,9,0,9,73,143,0,26,50,3,0,57,216,58,0,58,216,215,0,27,214,51,0,57,214,256,0,256,216,57,0,0,19,0,0,19,20,0,0,20,21,0,0,21,22,0,0,22,23,0,0,23,24,0,0,24,25,0,0,3,25,0,0}},
        {1, {16,121,15,0,122,121,16,0,123,124,125,0,126,124,123,0,127,128,129,0,130,128,127,0,23,131,22,0,132,133,134,0,52,53,128,0,40,135,46,0,136,137,138,0,52,128,130,0,139,131,23,0,139,129,140,0,121,141,15,0,138,137,142,0,143,121,122,0,126,123,144,0,133,145,134,0,134,144,132,0,44,146,48,0,48,146,45,0,57,147,56,0,148,147,57,0,149,146,44,0,150,151,149,0,152,143,153,0,152,153,154,0,43,57,1,0,154,153,155,0,152,121,143,0,146,151,148,0,149,151,146,0,155,41,154,0,154,41,49,0,156,129,157,0,140,156,158,0,159,160,161,0,158,156,162,0,163,160,159,0,140,129,156,0,136,152,154,0,132,161,164,0,163,162,165,0,163,158,162,0,166,167,149,0,24,139,23,0,42,166,44,0,165,162,168,0,163,159,158,0,166,155,167,0,54,55,56,0,14,142,13,0,19,134,18,0,125,140,158,0,169,132,164,0,161,160,164,0,170,160,163,0,11,40,10,0,0,130,25,0,167,171,150,0,172,164,171,0,168,162,173,0,172,169,164,0,170,163,165,0,159,125,158,0,162,156,173,0,153,143,169,0,168,54,174,0,54,56,174,0,47,136,49,0,172,153,169,0,170,165,175,0,155,153,172,0,136,154,49,0,167,150,149,0,21,126,20,0,167,172,171,0,171,170,150,0,165,168,174,0,17,122,16,0,170,175,150,0,168,173,51,0,168,51,54,0,166,41,155,0,156,157,173,0,166,149,44,0,165,174,175,0,45,146,148,0,155,172,167,0,148,57,43,0,164,160,171,0,171,160,170,0,42,41,166,0,45,148,43,0,148,151,147,0,56,147,174,0,174,147,175,0,175,151,150,0,147,151,175,0,157,50,173,0,173,50,51,0,157,58,50,0,125,124,131,0,139,127,129,0,144,176,126,0,140,131,139,0,122,133,143,0,131,124,22,0,143,133,169,0,169,133,132,0,125,131,140,0,159,123,125,0,136,138,152,0,132,144,161,0,129,128,157,0,144,123,161,0,128,53,58,0,40,39,10,0,130,127,25,0,0,52,130,0,25,127,24,0,10,39,2,0,24,127,139,0,22,124,21,0,161,123,159,0,21,124,126,0,13,177,12,0,134,145,18,0,17,145,122,0,152,138,121,0,46,137,47,0,126,176,20,0,19,176,134,0,14,141,142,0,47,137,136,0,11,135,40,0,122,145,133,0,177,135,12,0,142,177,13,0,134,176,144,0,18,145,17,0,46,135,177,0,157,128,58,0,20,176,19,0,15,141,14,0,142,141,138,0,177,137,46,0,12,135,11,0,138,141,121,0,142,137,177,0,40,46,65,0,65,67,40,0,206,50,210,0,1,227,225,0,1,225,59,0,82,1,59,0,55,227,56,0,56,227,57,0,48,45,83,0,228,227,55,0,83,45,84,0,41,86,49,0,49,86,85,0,97,44,48,0,2,73,9,0,65,46,47,0,97,88,42,0,231,55,232,0,65,47,85,0,51,206,232,0,97,42,44,0,95,97,48,0,95,48,83,0,228,55,231,0,232,55,54,0,51,232,54,0,47,49,85,0,42,86,41,0,88,86,42,0,43,1,82,0,84,45,43,0,84,43,82,0,57,227,1,0,51,50,206,0,50,58,210,0,58,179,210,0,67,39,40,0,26,52,0,0,2,39,73,0,194,52,26,0,67,76,39,0,58,53,179,0,39,76,73,0,194,53,52,0,179,53,194,0,2,10,0,0,10,11,0,0,11,12,0,0,12,13,0,0,13,14,0,0,14,15,0,0,15,16,0,0,16,17,0,0,17,18,0,0,18,19,0,0,19,20,0,0,20,21,0,0,21,22,0,0,22,23,0,0,23,24,0,0,24,25,0,0,0,25,0,0}},
        {2, {265,266,267,0,267,268,265,0,269,270,271,0,271,272,269,0,273,270,274,0,275,270,273,0,56,276,277,0,278,268,279,0,277,50,56,0,280,268,267,0,279,268,280,0,271,270,275,0,267,266,281,0,276,282,283,0,284,272,271,0,278,285,286,0,277,276,283,0,287,56,57,0,288,57,51,0,287,57,288,0,289,286,290,0,289,291,286,0,289,290,292,0,293,294,295,0,294,265,291,0,292,290,296,0,293,297,294,0,296,290,298,0,298,299,296,0,295,294,289,0,300,299,301,0,300,302,299,0,301,299,298,0,303,302,300,0,289,294,291,0,303,304,302,0,296,299,305,0,297,265,294,0,299,302,305,0,293,69,297,0,306,304,303,0,307,304,308,0,302,307,305,0,302,304,307,0,308,304,53,0,309,310,287,0,311,307,308,0,55,311,308,0,312,313,311,0,311,313,307,0,87,312,311,0,312,314,315,0,315,313,312,0,5,314,312,0,5,312,87,0,316,313,315,0,74,314,75,0,307,313,305,0,305,313,316,0,75,314,76,0,315,314,74,0,47,284,46,0,42,317,41,0,49,277,48,0,318,74,319,0,38,281,37,0,45,275,44,0,295,318,319,0,70,293,319,0,295,289,292,0,316,315,318,0,292,316,318,0,315,74,318,0,40,280,39,0,319,74,73,0,292,296,316,0,296,305,316,0,295,292,318,0,70,319,73,0,293,295,319,0,290,286,320,0,76,314,5,0,320,274,321,0,298,290,320,0,298,320,321,0,87,311,55,0,301,298,321,0,301,321,269,0,4,87,55,0,301,269,322,0,300,301,322,0,322,310,309,0,300,322,309,0,54,55,308,0,54,308,53,0,309,287,288,0,303,300,309,0,303,309,288,0,306,303,288,0,70,69,293,0,53,304,306,0,52,53,306,0,306,288,51,0,52,306,51,0,69,77,297,0,317,285,278,0,286,285,320,0,291,278,286,0,77,266,297,0,310,282,276,0,322,272,310,0,287,276,56,0,43,323,42,0,42,323,317,0,274,270,321,0,320,285,274,0,47,283,284,0,277,283,48,0,284,271,46,0,46,271,45,0,45,271,275,0,37,71,2,0,280,267,39,0,39,267,38,0,48,283,47,0,38,267,281,0,281,71,37,0,317,279,41,0,40,279,280,0,275,273,44,0,285,323,274,0,49,50,277,0,291,268,278,0,41,279,40,0,3,50,49,0,317,323,285,0,297,266,265,0,278,279,317,0,44,273,43,0,269,272,322,0,323,273,274,0,43,273,323,0,272,282,310,0,310,276,287,0,77,72,266,0,265,268,291,0,321,270,269,0,281,72,71,0,266,72,281,0,283,282,284,0,284,282,272,0,71,72,215,0,71,215,217,0,51,57,169,0,52,175,176,0,177,175,52,0,54,182,181,0,4,85,108,0,110,5,87,0,76,234,75,0,235,234,76,0,62,76,5,0,73,74,75,0,2,217,36,0,255,73,261,0,73,75,261,0,255,260,70,0,255,70,73,0,235,76,62,0,62,5,110,0,75,234,261,0,4,108,110,0,4,110,87,0,181,85,4,0,181,4,55,0,54,181,55,0,176,182,54,0,176,54,53,0,52,176,53,0,244,69,260,0,260,69,70,0,244,77,69,0,177,52,51,0,177,51,169,0,57,56,201,0,169,57,201,0,56,202,201,0,12,202,3,0,215,72,77,0,2,71,217,0,56,50,202,0,202,50,3,0,244,215,77,0,2,37,0,0,37,38,0,0,38,39,0,0,39,40,0,0,40,41,0,0,41,42,0,0,42,43,0,0,43,44,0,0,44,45,0,0,45,46,0,0,46,47,0,0,47,48,0,0,48,49,0,0,3,49,0,0}}
    };
    // Create mesh object m
    fvhyper::mesh m;
    std::string name = "test_mesh";
    m.read_file(name, pool);

    // Read the file
    auto& sol_nodes = mesh_sol.at(pool.rank);
    auto& our_nodes = m.cellsNodes.get_vector();

    if (our_nodes == sol_nodes) {
        status.success = fvhyper::STATUS_SUCCESS;
    } else {
        status.success = 0;
    }

    return status;
}




fvhyper::status test_solve(fvhyper::mpi_wrapper& pool) {
    fvhyper::status status;

    std::map<uint, std::vector<double>> solver_sol = {
        {0, {-0.57231910490668,0.60890348769147,-0.51069275158806,0.62311045925336,-0.78789493911553,0.13686905304563,-0.77416580820107,-0.24892344878598,-0.84333803692477,0.10237532357635,-0.77863469745272,-0.18543963866395,-0.78437989287966,0.20529955590604,-0.76988717355136,0.32698757610913,-0.59024346135359,0.56014642592552,-0.82001300788624,0.29877262893920,-0.85305871281038,0.03930923562467,-0.72078626700684,-0.14449206668235,-0.71893072977047,-0.08114421978361,-0.82315170567244,0.00105421411201,-0.11284319358374,0.14704744830880,-0.00604756012942,0.14094078967384,-0.06100724872295,0.11334505008583,0.04544962245176,0.10705402631357,-0.11003583891435,0.20842407924967,-0.00300964932404,0.20255917405202,0.08951950669404,-0.04962393950488,-0.17832071929139,-0.06515493639435,-0.12328243889071,-0.03705901165406,-0.55754713035633,-0.15960490404798,-0.50289052506388,-0.12476851597296,-0.50543498504863,-0.25266564237667,-0.50108991567120,-0.06169509964245,-0.38754539499180,0.06431637669598,-0.55347671528373,0.02954223172431,-0.55840642341288,-0.22380833968763,-0.33446698917486,0.03288581115565,-0.44565260334872,-0.02891597858274,-0.44339734519225,0.03319632602598,-0.55487116698959,-0.03289971997397,-0.38529014748155,0.12575059616149,-0.28821432021523,-0.12333522503853,-0.50592067195018,0.48988558804438,-0.32687719701562,0.39942741412135,-0.60833059290409,0.30019087736047,-0.27888992066566,0.06231146796084,-0.27398487886091,0.49027268288134,-0.49767659597587,0.42607703666487,-0.55264352387026,0.39261340237303,-0.49743465448250,0.06288192135905,-0.66325206832081,-0.04273196586221,-0.16104714484869,0.42635274742127,-0.33343125512559,0.58151213837033,-0.33229971118938,0.52127728817118,-0.27178718203717,0.24595679106003,-0.32751194296732,0.21676376211478,-0.43861097775956,0.33850253196194,-0.43853243383765,0.21722129628096,-0.55166043135615,0.33378974950739,-0.66299873228546,0.32711086572534,-0.81967818449043,0.46573980845367,-0.21546881939456,0.33594123727407,-0.38194396264291,0.30863754974934,-0.61099708991675,-0.13197625912732,-0.94022671512915,-0.03731725841259,-0.38428702647037,0.42977300070130,-0.49595882358850,0.12444560148322,-0.66626704122395,0.20670690712852,-0.66567819333847,0.14566209009269,-0.71576782058583,-0.27190029662615,-0.27603805252727,0.12365681864943,-0.39525508727858,-0.12226812026314,-0.38231813061553,0.24786394311752,-0.72146548230772,0.04335614416918,-0.21968809220758,0.52020050459362,-0.43966256038483,0.15621110782658,-0.60799363034542,0.11866220027033,-0.66293284303835,0.02011106339001,-0.66573728403394,-0.23361049281036,-0.27166537825059,0.42916984708571,-0.60829086551633,0.24063085232872,-0.92143349227780,0.17141943920797,-0.32936021415159,0.15567416356558,-0.34297726444886,-0.15379942352904,-0.28516017779027,-0.06111378413562,-0.10615211908298,0.39343732160784,-0.22998775589411,-0.03197724890087,-0.33737207380907,-0.02893929712982,-0.27073620784202,0.30702178752071,-0.21560623548874,0.39727098143195,-0.66614077158034,-0.16967768822618,-0.49457731216588,0.24641905370925,-0.68994138137799,0.63510601857820,-0.16804334662575,0.11919419153566,-0.72486661609883,0.10707780465835,-0.32610027793844,0.33860865626612,-0.16278479984471,0.48818481799439,-0.45163368519580,0.52353852582320,-0.39271038138700,-0.05963136477646,-0.38739019879774,0.49051472355342,-0.61147310382321,-0.26013290096347,-0.22662495668637,0.02961919809575,-0.49500721033640,0.30690520894655,-0.55147380377996,0.15282443422509,-0.55122180368587,0.21376602172147,-0.22049919941888,0.15228129882605,-0.44015693516084,0.39882225662967,-0.61013678765337,-0.06836802005595,-0.21809037789411,0.21348626345952,-0.60850684155603,0.05696440255362,-0.45168342998622,-0.21833009199606,-0.17131899051807,0.05788029911259,-0.45000697523861,-0.15463512742772,-0.11964406880002,0.02437981036594,0.03445371517273,-0.07714871844925,-0.07190815037564,-0.07080809374880,-0.01691397053540,-0.04324841331591,-0.06453452810891,0.05199043323139,-0.01317832757561,0.01811300882183,0.04184496832645,0.04557834854915,-0.16283280132202,0.24177558586107,-0.10650944754021,0.33157406776021,0.09317531901259,0.01174305607267,-0.16125143308564,0.30316533171954,-0.05321207687287,0.29810175131786,-0.05516615836229,0.23633599007462,-0.72168289340193,0.23634264088645,-0.39131505279188,0.61204988418250,-0.71849179868710,0.29730702935910,-0.45450251692448,0.58461388563074,-0.65896988513101,0.49671224986899,-0.71061044950172,0.47043992455255,-0.71374387971062,0.41399134142716,-0.82838212495258,-0.15591588243358,-0.66065026362782,0.38638069462535,-0.76763996899168,0.00067736732369,-0.75940034662904,0.55411476997876,-0.62546957405982,0.65369736660223,-0.91560558119128,0.02013207442991,-0.90646041757436,-0.07939342452963,-0.76379373446774,0.49736811332351,-0.90395883701324,0.12001949390347,-0.69852222532635,0.57943208817206,-0.94502325680369,0.06468371614983,-0.76735855477064,0.38441200820288,-0.82028929706029,0.40934591632065,-0.88895741684165,0.22265342247112,-0.56292402454211,0.50970823425669,-0.83136808163178,0.23760474324948,-0.60700831521740,0.41810655547231,-0.87093260378156,0.37188991565672,-0.81674163326406,-0.09447498184794,-0.91286056273102,0.27468980896189,-0.76515111423622,-0.06080599250843,-0.85168170610994,-0.06049750594051,-0.60860387857908,0.47209506415171,-0.65143701633773,0.54862163912926,-0.86863620206532,0.31887005236710,-0.38724643006337,0.67073994443785,-0.43875915118466,0.70264833318058,-0.81578080053751,-0.29026888763818,0.05157833511276,0.23060437982363,0.05373567973905,0.29281171585993,0.10337591282123,0.19683295073911,0.19642744541617,-0.05526261056987,0.13797917457561,-0.14455183947671,0.14117562646737,-0.08325606514156,-0.23641174604711,-0.15607017464389,-0.18168683751564,-0.12702767780701,-0.23909847425875,-0.21870666696786,0.03102248046031,-0.13855755294110,-0.45296932605735,-0.34764170708474,-0.50560646041551,-0.31762194682741,-0.16972659063301,0.61159620158252,0.00179087019300,0.38896072764415,-0.05346427193976,0.48495148237137,-0.34529260574897,-0.21696179815785,-0.22281756559435,0.58113549727500,-0.27823315737495,0.61136687083791,-0.90190970384131,-0.24863743158820,-0.11299007894233,0.58031046923699,-0.60957762489942,-0.32512328348230,-0.55671102268854,-0.35379876374666,-0.10920320958008,0.51781941525850,-0.40035074529691,-0.31348457904060,-0.05217214150407,0.42238971772611,-0.29322429112230,-0.24912990316494,-0.13013915559850,-0.16052939969411,-0.02383397261423,-0.16625496202004,-0.39925766506500,-0.24912375781776,-0.07539756937840,-0.13240859228768,0.08289321156968,-0.17232782384809,0.19982482369192,0.00618907551876,0.14823009887547,0.03956384426133,0.10028392726534,0.13489532470014,0.00109622654243,0.32652189949120,0.15173290465010,0.10124220113044,-0.49931998886155,0.68258376053880,-0.28064536452653,0.66644791467023,-0.33152016353072,0.69523134678851,-0.88594624942906,-0.18473756642137,-0.61307202932798,0.70820336233376,-0.54876848027037,0.72325279121307,-0.92923154472514,-0.14309374021993,-0.70961059822525,-0.33481539934156,-0.65772300222217,-0.36182041076339,-0.86945411495670,-0.29126789753413,-0.80156189153494,-0.34999223260363,-0.75352392553447,-0.37204980473868,-0.74564216488316,0.66634657795201,-0.81556086895926,0.57867129617980,-0.87522342190875,0.48371888710524,-0.92387953251129,0.38268343236509,-0.96091732194510,0.27683551142485,-0.98587101851824,0.16750622330474,-0.99842681501782,0.05607044723720,-0.99842681501782,-0.05607044723719}},
    	{1, {-0.63513885007302,-0.68160951752590,-0.57870069967305,-0.68830353838043,-0.10325755812134,-0.79729502570723,-0.14610922659562,-0.82926869755608,0.22232576278704,-0.79279081154689,0.27741845327252,-0.81804220066410,0.03430300506994,-0.92858964704492,-0.37393659610642,-0.71772243995311,0.35757725721164,-0.75369118042747,-0.81578080053751,-0.29026888763818,-0.65112834781926,-0.43232164473921,0.33644218604749,-0.79564911664044,0.07745038728522,-0.89519686126782,0.10968817459020,-0.79825070603345,-0.66221326894379,-0.62626161342644,-0.69524476684185,-0.46949269513762,-0.53895340886965,-0.63222031866373,-0.20622279790172,-0.79539756745055,-0.41455929690054,-0.75076786188893,-0.32013967612272,-0.74537704961378,-0.23641174604711,-0.15607017464389,-0.18168683751564,-0.12702767780701,0.02558461732969,-0.26182900927053,-0.02665888749035,-0.22804847157535,-0.23909847425875,-0.21870666696786,-0.18902253102928,-0.31489627004464,-0.49829928519509,-0.51774488851563,-0.50230587101227,-0.45023477060243,0.03102248046031,-0.13855755294110,-0.45210472236862,-0.41339748174118,-0.54953994407152,-0.56204564851942,-0.13299148189955,-0.22270775430850,-0.18722983088563,-0.25183731427145,-0.45296932605735,-0.34764170708474,-0.50560646041551,-0.31762194682741,0.15097665946778,-0.69992032594466,0.04105947705462,-0.70176783160512,-0.18011810071351,-0.63551037701416,0.03405854640892,-0.63809950570199,-0.12989084940394,-0.60378310919904,0.10009113000010,-0.73293725172912,-0.55428037483132,-0.42064392621295,-0.28402861683455,-0.63888506491389,-0.02694670912368,-0.54185389845064,-0.02286795409308,-0.60562082417591,-0.29478176689610,-0.31281509738644,0.14316049985707,-0.92618335959891,-0.34529260574897,-0.21696179815785,0.02556762666271,-0.51156024561263,-0.07394593519218,-0.63661333748756,-0.34795563809616,-0.34500119711423,0.13183934071119,-0.32881299124000,-0.77869954632160,-0.53898076728228,-0.37280916065339,-0.86017101447578,-0.00824124769823,-0.73374643143180,-0.33854255824226,-0.60852914478301,-0.23525078776400,-0.60396550049599,-0.13379699628581,-0.53968394520997,-0.90190970384131,-0.24863743158820,0.35295244794484,-0.88154952733347,-0.24271946048603,-0.40962617299122,-0.29317982408896,-0.50740157950492,0.08147580495141,-0.54440552046138,-0.34362523253470,-0.54160432138253,-0.08191637710269,-0.50877593480703,-0.06634561357756,-0.70121538757922,0.08587355519331,-0.60723483164238,-0.44561578584842,-0.54710893150321,0.07739445208474,-0.41944393083364,0.07734568027436,-0.35732902016333,-0.60957762489942,-0.32512328348230,-0.39694663957759,-0.51036465660527,-0.08351115462343,-0.44505227499435,-0.39942490375578,-0.44418732831610,-0.55671102268854,-0.35379876374666,-0.24245738126989,-0.34544381882863,-0.17405589628973,-0.92495345493724,-0.29497983795973,-0.44193707555696,-0.18965723160811,-0.44251548117902,0.02374138944971,-0.44866865943076,-0.55247211953568,-0.75667238491005,-0.13696817666239,-0.41169561458138,0.13466506048694,-0.51452602990286,0.13242275658249,-0.45243223898180,-0.40035074529691,-0.31348457904060,0.14386805508649,-0.63777641480293,-0.29322429112230,-0.24912990316494,-0.03037084206715,-0.41527056524178,-0.13013915559850,-0.16052939969411,-0.34787425811800,-0.40994519833418,-0.02383397261423,-0.16625496202004,-0.23934916839174,-0.53935011082935,-0.18806842460496,-0.50679422517902,-0.39925766506500,-0.24912375781776,-0.07539756937840,-0.13240859228768,-0.08107498380663,-0.25637470934691,0.02394041154951,-0.32381428293983,-0.03011630433301,-0.35251426165181,-0.13660256520121,-0.34824791915722,-0.08289065750228,-0.31886521743752,0.19650123478643,-0.60673857912886,0.19170990504863,-0.54626034471941,0.25580110113687,-0.63237516158915,-0.04329038605605,-0.83026046416655,0.16766063959482,-0.82921486044752,-0.24077620390782,-0.83051521377876,0.06068027349869,-0.82946192188774,-0.48083591535088,-0.65609791921643,-0.02714599977738,-0.89776827891285,-0.43805966733676,-0.61500477302860,-0.38440851819834,-0.64528910540457,0.00179092019842,-0.79612988992967,-0.11603408674522,-0.73048385721675,-0.60066073921403,-0.46243350644753,-0.27625932925430,-0.70360181050697,0.21545869158574,-0.72851704532405,-0.22130149830546,-0.73053529217326,0.33013196199238,-0.70771195884256,-0.88594624942906,-0.18473756642137,0.28707578126612,-0.87340946030129,0.38011761798075,-0.83690505096909,0.24901409071710,-0.91014308539040,-0.92923154472514,-0.14309374021993,0.18401035124301,-0.89129237507391,-0.06937953095606,-0.93409521221899,-0.17371836835741,-0.69748064629227,-0.12853381297917,-0.89843072989986,-0.83595930356704,-0.44676226946503,-0.41490187150594,-0.81393876779646,-0.50001528621043,-0.76482829664869,-0.60011734267105,-0.53647893676036,-0.70961059822525,-0.33481539934156,-0.22583345523400,-0.89077214467763,-0.32011133719667,-0.85714691273271,-0.73250073050362,-0.56340173222796,-0.65772300222217,-0.36182041076339,-0.86945411495670,-0.29126789753413,-0.46762409258256,-0.71914019615331,-0.84215935545586,-0.38609413573149,-0.78806766872287,-0.47450307327415,-0.29925136623402,-0.80692101317030,-0.46924470709501,-0.82441394779009,-0.80156189153494,-0.34999223260363,0.26733797128168,-0.69196503859580,-0.27388161016164,-0.91045063315619,-0.71776435421838,-0.62530099000563,-0.69108805273417,-0.53134652592856,-0.75352392553447,-0.37204980473868,-0.88538979976060,-0.35585916500098,-0.64580147274869,-0.56832459370250,-0.74584497973015,-0.43597143359564,-0.77416580820107,-0.24892344878598,-0.77863469745272,-0.18543963866395,0.30393176987262,-0.54624561712192,0.13797917457561,-0.14455183947671,0.14117562646737,-0.08325606514156,0.08951950669404,-0.04962393950488,0.13313383989976,-0.26727212485372,0.08027744976132,-0.23381024363772,-0.17832071929139,-0.06515493639435,0.18820991413500,-0.23905319322501,-0.12328243889071,-0.03705901165406,-0.50543498504863,-0.25266564237667,-0.55840642341288,-0.22380833968763,-0.28821432021523,-0.12333522503853,-0.94022671512915,-0.03731725841259,-0.71576782058583,-0.27190029662615,-0.39525508727858,-0.12226812026314,0.24116521328610,-0.33288621478246,-0.66573728403394,-0.23361049281036,0.24284708574126,-0.45534096127184,-0.34297726444886,-0.15379942352904,-0.28516017779027,-0.06111378413562,-0.22998775589411,-0.03197724890087,0.24194720906034,-0.27174105427316,0.18614408863857,-0.36173811357110,0.18666567437593,-0.42325438852494,-0.61147310382321,-0.26013290096347,-0.45168342998622,-0.21833009199606,-0.45000697523861,-0.15463512742772,0.03445371517273,-0.07714871844925,-0.07190815037564,-0.07080809374880,-0.01691397053540,-0.04324841331591,0.08289321156968,-0.17232782384809,0.24563403239460,-0.51628934335059,0.30944540388022,-0.60205513157546,0.36958335897903,-0.62641410591558,-0.82838212495258,-0.15591588243358,0.44227736212228,-0.83263109592481,-0.90646041757436,-0.07939342452963,0.46420623689708,-0.78436576052173,-0.81674163326406,-0.09447498184794,0.37878693752047,-0.67285660204981,-0.85168170610994,-0.06049750594051,0.42397120885708,-0.74615123079665,0.43455293441589,-0.69967829039764,-0.98587101851824,-0.16750622330474,-0.96091732194510,-0.27683551142484,-0.92387953251129,-0.38268343236508,-0.87522342190875,-0.48371888710524,-0.81556086895926,-0.57867129617980,-0.74564216488317,-0.66634657795200,-0.66634657795201,-0.74564216488316,-0.57867129617981,-0.81556086895926,-0.48371888710524,-0.87522342190875,-0.38268343236510,-0.92387953251128,-0.27683551142485,-0.96091732194510,-0.16750622330474,-0.98587101851823,-0.05607044723720,-0.99842681501782,0.05607044723719,-0.99842681501782,0.16750622330473,-0.98587101851824,0.27683551142484,-0.96091732194510,0.38268343236508,-0.92387953251129}},
		{2, {0.48644643443764,-0.62624300206881,0.53782781895472,-0.59437187406941,0.79529027586479,-0.12058147278456,0.79437876735880,-0.06488301862609,0.79361303592411,-0.24289604707837,0.84185074263676,-0.20762546590399,0.79310247215014,0.22093986895315,0.64456817876335,-0.51953692092939,0.81270111250857,0.27505189889538,0.59845969699078,-0.60895059163154,0.65057753445931,-0.56930025738843,0.84283317403349,-0.14497114426806,0.48882583427810,-0.68064879075608,0.82069057937624,0.12241480053129,0.84041866384372,-0.02199722481797,0.63861410560186,-0.40898156487118,0.83422466379826,0.17351833110503,0.69008427350259,0.23704754743417,0.58243731957128,0.22944748419705,0.63431496097105,0.20117016154639,0.52272948805256,-0.36117194581914,0.52357841505297,-0.42004466233846,0.46502855629968,-0.33392740197121,0.35493280166136,-0.45610514358120,0.47052174466086,-0.51183275012142,0.46436458318292,-0.27350975375996,0.35829765826588,-0.51573383196651,0.52052790702817,-0.24134478357271,0.52080698479322,-0.18072559115166,0.41053246394163,-0.42539358665932,0.57803349446043,-0.08622378654474,0.52312430275427,-0.05814716666587,0.57718052786486,-0.14748252923204,0.52461584636290,0.00389302550761,0.46746504407745,-0.45290350227449,0.47088127871185,0.03320343019882,0.46560674667681,-0.15198191537347,0.41702703543772,-0.54393152146992,0.46705471065923,-0.09066756184049,0.30393176987262,-0.54624561712192,0.47289661270135,0.09587348078229,0.36249604775595,0.03242286511742,0.41303822698068,-0.06052524883552,0.41535983947358,0.00128291163603,0.36521468638653,0.09471534659978,0.68350974576216,0.10687767150114,0.30713205712327,0.00238238635356,0.25500886757256,0.03486643582669,0.24865225355061,-0.08819584714397,0.30417682947205,-0.05922217841248,0.19642744541617,-0.05526261056987,0.19044435619552,-0.17781454917374,0.24586452763009,-0.14944863359764,0.13797917457561,-0.14455183947671,0.14117562646737,-0.08325606514156,0.29918299184164,-0.18174963296331,0.13313383989976,-0.26727212485372,0.35721093216034,-0.09100292256616,0.35500496875112,-0.15226842625077,0.08027744976132,-0.23381024363772,0.18820991413500,-0.23905319322501,0.93984181103718,0.03991430633746,0.81697962070043,-0.46761713329683,0.90670632567061,0.24937001786666,0.24116521328610,-0.33288621478246,0.53171434645661,-0.77560173228031,0.93576146798049,-0.17086108825076,0.29660453527971,-0.36472857737835,0.24284708574126,-0.45534096127184,0.40896391825125,-0.36522445660723,0.29749387046765,-0.24279842677121,0.35233615678113,-0.27422303975597,0.24194720906034,-0.27174105427316,0.70066267341060,-0.64133062492040,0.18614408863857,-0.36173811357110,0.40839302330137,-0.24401506691594,0.40938090192379,-0.18312096232828,0.35221546689846,-0.33500143981122,0.18666567437593,-0.42325438852494,0.29774542869538,-0.42566625986760,0.57901096488384,-0.32736611863113,0.08289321156968,-0.17232782384809,0.68772182589088,-0.25631974548535,0.57749815702236,-0.26796586547788,0.63242445363792,-0.23286870700792,0.19982482369192,0.00618907551876,0.63191728397656,-0.17303253388856,0.68729148510236,-0.13693824380556,0.14823009887547,0.03956384426133,0.68761179010597,-0.07686846880626,0.63315208460430,-0.05173262032572,0.68403346611137,0.04380812984533,0.63380761645213,0.01063776522136,0.25822239679562,0.09682284628968,0.31307408113792,0.12663937895997,0.63433641432867,0.13681528199098,0.58015036820710,0.03821512529645,0.58124699675032,0.10127544584750,0.52775727863415,0.12966277680149,0.24563403239460,-0.51628934335059,0.42011067310614,0.12626279692282,0.42214446574835,0.18955173388886,0.52901829391918,0.19350158276851,0.47621111271443,0.22301207412442,0.30944540388022,-0.60205513157546,0.69768763618527,-0.43017758174781,0.63699593243654,-0.35102848923860,0.58147298050969,-0.44417687269678,0.36958335897903,-0.62641410591558,0.77318014533866,0.10360499992013,0.73343965919368,0.01526774273329,0.73869677837332,0.20195773830248,0.86465602884119,-0.37177381576892,0.81211936457433,-0.41220787788634,0.73771311586337,-0.21808710317279,0.69071078635148,-0.31499191603312,0.90686601870561,0.08641330698632,0.89065734185675,0.18885384257646,0.90310908792475,-0.02117584058715,0.93001419051199,-0.06956607441353,0.90283047618163,-0.12433678066097,0.44227736212228,-0.83263109592481,0.63085919130623,-0.65531587176629,0.60956067672517,-0.70386142724303,0.92997398760074,0.14626113553690,0.54479566442273,-0.71867633159826,0.46420623689708,-0.78436576052173,0.76251006286357,-0.50343136641803,0.70858031608421,-0.58844926383970,0.89725655374497,-0.22258996541573,0.74748089414123,-0.33639592055929,0.87033383309407,0.28874404008853,0.58277370546513,-0.50041369982081,0.76271066702658,-0.55779005443344,0.88140207203853,0.35229634776733,0.75273909954134,-0.39348863783946,0.42289576036211,-0.59877269835238,0.70238987867508,-0.48447155845396,0.90760811071145,-0.27390831034560,0.73760127097859,-0.04264807232675,0.80073870217777,-0.30208083783501,0.85907619244271,-0.31863667960978,0.77425615913558,0.04612281887522,0.73179000757843,0.13572868039759,0.37878693752047,-0.67285660204981,0.52793215777710,-0.53495323742601,0.73794637433327,-0.15859825087869,0.42397120885708,-0.74615123079665,0.43455293441589,-0.69967829039764,0.85432999886602,0.07824413024423,0.82475498948186,0.03027399235969,0.35757725721164,-0.75369118042747,0.33644218604749,-0.79564911664044,0.58247940995425,0.29468041683564,0.37140590571033,0.28470962927388,0.42443327489719,0.31793917546930,0.20950347544767,0.19215897396606,0.04544962245176,0.10705402631357,0.08951950669404,-0.04962393950488,0.02558461732969,-0.26182900927053,-0.02665888749035,-0.22804847157535,0.03102248046031,-0.13855755294110,0.13183934071119,-0.32881299124000,0.35295244794484,-0.88154952733347,0.07739445208474,-0.41944393083364,0.07734568027436,-0.35732902016333,0.13466506048694,-0.51452602990286,0.13242275658249,-0.45243223898180,-0.02383397261423,-0.16625496202004,0.03445371517273,-0.07714871844925,0.02394041154951,-0.32381428293983,0.04184496832645,0.04557834854915,0.09317531901259,0.01174305607267,0.10028392726534,0.13489532470014,0.15173290465010,0.10124220113044,0.20654596581698,0.12982555215434,0.26380553407259,0.22195238207217,0.31569080642909,0.18943406183706,0.36988073910680,0.22080883043779,0.19650123478643,-0.60673857912886,0.19170990504863,-0.54626034471941,0.25580110113687,-0.63237516158915,0.47694873774874,0.28747945794649,0.52979542774915,0.32320465978238,0.68976340962728,0.30416937085767,0.63398124690637,0.33341089890445,0.73996199994450,0.34667999259291,0.83045026536781,0.44006651545732,0.33013196199238,-0.70771195884256,0.38011761798075,-0.83690505096909,0.79168012332669,0.33024426524094,0.83486897166661,0.37793466011226,0.26733797128168,-0.69196503859580,0.48371888710523,-0.87522342190876,0.57867129617980,-0.81556086895926,0.66634657795200,-0.74564216488317,0.74564216488316,-0.66634657795201,0.81556086895926,-0.57867129617981,0.87522342190875,-0.48371888710524,0.92387953251128,-0.38268343236509,0.96091732194510,-0.27683551142485,0.98587101851824,-0.16750622330474,0.99842681501782,-0.05607044723720,0.99842681501782,0.05607044723719,0.98587101851824,0.16750622330473,0.96091732194510,0.27683551142484,0.92387953251129,0.38268343236509}},
		{3, {0.06733928182552,0.91865525646150,-0.38724643006337,0.67073994443785,-0.43875915118466,0.70264833318058,0.12404161704518,0.87898639645903,-0.23885483379772,0.80189018494702,0.18941984573330,0.77575057972484,0.01830334671709,0.89651129184273,0.61918348752077,0.53044657864666,-0.26319688023680,0.75755258891529,0.13171777721340,0.80602735903652,0.61107751278767,0.59518658530532,0.23531157036798,0.80895714175547,0.35461163826820,0.67957389007664,0.08294208911392,0.76924797262317,0.58247940995425,0.29468041683564,0.26708925844502,0.41348447191240,0.31351811462880,0.57800979144178,0.31705537117071,0.51178658168567,0.31968378062175,0.38109450735362,0.37140590571033,0.28470962927388,0.42443327489719,0.31793917546930,0.31920362324934,0.31662889274879,0.26604613001935,0.47851500355115,0.42428998004269,0.38313153485491,0.05157833511276,0.23060437982363,0.05373567973905,0.29281171585993,0.10337591282123,0.19683295073911,0.15778574016722,0.22550929180980,0.20950347544767,0.19215897396606,0.15996168991659,0.28823128176320,-0.01600923373516,0.70173188792485,-0.06692026476601,0.67190530388930,0.05427277091808,0.48162809695269,-0.00052222407434,0.51481615109784,-0.06064608931079,0.61053988944835,0.10664036896120,0.51225748969986,0.10344006207151,0.57656708159389,0.46826448412196,0.81915132371470,-0.16972659063301,0.61159620158252,0.00179087019300,0.38896072764415,-0.53314664129219,0.77691136849429,-0.05346427193976,0.48495148237137,-0.22281756559435,0.58113549727500,0.14865585929616,0.67429428923917,-0.34598079750394,0.86942053381783,-0.14365879407993,0.93146647539423,-0.27823315737495,0.61136687083791,-0.11299007894233,0.58031046923699,-0.17872365807001,0.67658629766461,0.63718044907459,0.69926660041689,0.05528034500363,0.41830428399012,0.09199476825366,0.70437944185552,0.19722570673898,0.70833665720857,0.17387287609105,0.91601070357298,0.15432419955483,0.60877635160700,0.04184708057292,0.67150262396460,0.25288694228901,0.67656332311925,-0.10920320958008,0.51781941525850,-0.12824763017722,0.70685812569979,0.77335480944267,0.53089251057072,0.04767725546028,0.60897526821388,-0.05217214150407,0.42238971772611,-0.00390752529949,0.57792931634512,0.16072502569140,0.47921925112175,0.10028392726534,0.13489532470014,0.00109622654243,0.32652189949120,0.15173290465010,0.10124220113044,0.20654596581698,0.12982555215434,0.10770898489486,0.32175047574849,0.10856464447860,0.38482606192667,0.26380553407259,0.22195238207217,0.16163864573938,0.41506835401775,0.31569080642909,0.18943406183706,0.36988073910680,0.22080883043779,0.37176300335579,0.41437813981267,0.37016320526309,0.48004088730836,0.41950705892800,0.51482360547981,0.26577873688656,0.28524358352678,0.21447904535507,0.38194842614848,0.21365930083539,0.31816502679856,0.47171831356142,0.48394760734959,0.47694873774874,0.28747945794649,0.21252605331949,0.51109395046419,0.25930374207731,0.61002741470977,0.47493017586642,0.41798945409131,0.52979542774915,0.32320465978238,-0.17979140104733,0.79719763298601,0.20931883864577,0.57642460511875,0.68976340962728,0.30416937085767,0.52784187631117,0.38844714416638,0.57747075660706,0.42577036769211,0.63398124690637,0.33341089890445,0.63078888686660,0.39921919333791,0.40194931365802,0.71798364665944,0.36239695210615,0.61321287497433,0.29936652126516,0.71093593229872,0.67981608436180,0.44044512766162,0.73996199994450,0.34667999259291,0.83045026536781,0.44006651545732,0.78034722743518,0.46260159006382,0.41532618848954,0.58176987466571,0.28977876997780,0.77594587888050,0.46194461196806,0.61641858033698,-0.49931998886155,0.68258376053880,0.73289861118757,0.41703330050511,0.45647571602273,0.68640047708655,0.51392020941452,0.58524521178519,0.57229712416664,0.49104427836616,-0.28064536452653,0.66644791467023,0.67314468275697,0.50624993053558,0.02547997022813,0.78997311949838,0.55868529841577,0.62149678801484,0.27677081084899,0.90142960350376,0.22824751472352,0.87604317687319,-0.33152016353072,0.69523134678851,-0.08254628900812,0.91035678925925,-0.04006579319378,0.94196288726398,0.70776802657001,0.61659183676479,0.71951460932699,0.55110339435558,0.65375333948988,0.63702785504864,-0.24480386713776,0.90598718892124,-0.27889440626211,0.85995481130267,-0.61307202932798,0.70820336233376,-0.54876848027037,0.72325279121307,-0.18011346926028,0.89201562945585,0.79168012332669,0.33024426524094,0.00438084245780,0.84093347989782,0.33057653820139,0.80652355750952,0.41601495377104,0.82384532921273,-0.47413838517968,0.79000736452432,-0.38356798270639,0.83195149610639,0.50626590705482,0.77219072063990,0.58698003464957,0.71724901591055,0.38732652585182,0.77960544180236,0.83486897166661,0.37793466011226,-0.32515762188482,0.75160684481199,-0.37138893030804,0.78076678692114,-0.42945035575737,0.75616312658703,0.51953504757246,0.51984103703034,0.50055066201743,0.71452586276592,0.55091196323020,0.68053509166474,-0.09498381381052,0.82498872391722,-0.23443246281318,0.70068772128269,0.32500860085802,0.86455446793402,-0.02389739605257,0.75552412808527,-0.05893469801532,0.85540338523501,0.37509675249955,0.87852579988903,-0.08016198100675,0.77636764236118,-0.45202164124208,0.83928488827064,-0.13407214683160,0.75787224240821,0.56157124263443,0.77353897362550,-0.15582452188822,0.84077099976693,-0.57231910490668,0.60890348769147,-0.51069275158806,0.62311045925336,0.79310247215014,0.22093986895315,0.81270111250857,0.27505189889538,0.69008427350259,0.23704754743417,0.58243731957128,0.22944748419705,0.63431496097105,0.20117016154639,0.36521468638653,0.09471534659978,0.25500886757256,0.03486643582669,-0.00604756012942,0.14094078967384,0.04544962245176,0.10705402631357,-0.00300964932404,0.20255917405202,-0.27398487886091,0.49027268288134,-0.16104714484869,0.42635274742127,-0.33343125512559,0.58151213837033,-0.33229971118938,0.52127728817118,-0.21968809220758,0.52020050459362,-0.10615211908298,0.39343732160784,-0.68994138137799,0.63510601857820,-0.16278479984471,0.48818481799439,0.04184496832645,0.04557834854915,-0.10650944754021,0.33157406776021,0.19982482369192,0.00618907551876,0.09317531901259,0.01174305607267,-0.05321207687287,0.29810175131786,-0.05516615836229,0.23633599007462,0.14823009887547,0.03956384426133,0.25822239679562,0.09682284628968,0.31307408113792,0.12663937895997,0.42011067310614,0.12626279692282,0.42214446574835,0.18955173388886,0.52901829391918,0.19350158276851,0.47621111271443,0.22301207412442,-0.39131505279188,0.61204988418250,-0.45450251692448,0.58461388563074,0.73869677837332,0.20195773830248,-0.62546957405982,0.65369736660223,0.87033383309407,0.28874404008853,0.88140207203853,0.35229634776733,-0.05607044723719,0.99842681501782,-0.16750622330474,0.98587101851824,-0.27683551142485,0.96091732194510,-0.38268343236509,0.92387953251128,-0.48371888710523,0.87522342190876,-0.57867129617980,0.81556086895926,-0.66634657795200,0.74564216488317,0.87522342190876,0.48371888710524,0.81556086895926,0.57867129617981,0.74564216488317,0.66634657795200,0.66634657795201,0.74564216488316,0.57867129617981,0.81556086895926,0.48371888710524,0.87522342190875,0.38268343236509,0.92387953251129,0.27683551142486,0.96091732194510,0.16750622330473,0.98587101851824,0.05607044723720,0.99842681501782}}
    };
    // Create mesh object m
    fvhyper::mesh m;
    std::string name = "test_mesh";
    m.read_file(name, pool);

    // Create solver
    fvhyper::solverOptions options;
    options.max_step = 20000;
    options.tolerance = 1e-12;
    options.print_interval = 100000;
    options.verbose = false;

    // Run solver
    std::vector<double> q;
    fvhyper::run(name, q, pool, m, options);

    // Check solution
    auto& qs = solver_sol.at(pool.rank);

    if (qs.size() != q.size()) {
        status.success = 0;
        return status;
    }

    double err = 0;
    for (uint i=0; i<q.size(); ++i) {
        err += sqrt((q[i]-qs[i])*(q[i]-qs[i]));
    }
    if (err > 1e-10) {
        status.success = 1;
        return status;
    }

    status.success = fvhyper::STATUS_SUCCESS;
    return status;
}



void gen_mesh_sol(fvhyper::mpi_wrapper& pool) {
    // Create mesh object m
    fvhyper::mesh m;
    std::string name = "test_mesh";
    m.read_file(name, pool);

    // Print the solution
    auto& our_nodes = m.cellsNodes.get_vector();
    std::string s = "{" + std::to_string(pool.rank) + ", {";
    
    for (auto& i : our_nodes) {
        s += std::to_string(i) + ",";
    }
    s.pop_back();

    s += "}},\n";

    std::cout << s << std::flush;
}

void gen_solver_sol(fvhyper::mpi_wrapper& pool) {
    // Create mesh object m
    fvhyper::mesh m;
    std::string name = "test_mesh";
    m.read_file(name, pool);

    // Create solver
    fvhyper::solverOptions options;
    options.max_step = 20000;
    options.tolerance = 1e-12;
    options.print_interval = 100000;
    options.verbose = false;

    // Run solver
    std::vector<double> q;
    fvhyper::run(name, q, pool, m, options);

    // Print the solution
    std::ofstream file;
    file.open("sol_" + std::to_string(pool.rank) + ".txt");
    file << "\t\t{" + std::to_string(pool.rank) + ", {";
    
    for (auto& i : q) {
        file << convert_double(i, 14) + ",";
    }

    file << "}},\n";
    file.close();
}



int main() {
    fvhyper::mpi_wrapper pool;

    if (pool.size != 4) {
        if (pool.rank == 0) {
            std::cout << "\033[1;31mError\033[0m - The number of mpi ranks should be 4" << std::endl;
        }
        return 1;
    }

    fvhyper::tester tester_mesh ("mesh ", test_mesh,     pool);
    fvhyper::tester tester_solve("solve", test_solve,     pool);

    tester_mesh();
    tester_solve();

    //gen_mesh_sol(pool);
    //gen_solver_sol(pool);

    pool.exit();
}

